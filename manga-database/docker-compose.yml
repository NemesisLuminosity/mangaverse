version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: manga-db
    environment:
      POSTGRES_DB: manga_database
      POSTGRES_USER: manga_user
      POSTGRES_PASSWORD: manga_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - manga-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: manga-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - manga-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: manga-backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://manga_user:manga_password@postgres:5432/manga_database
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - PORT=4000
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - manga-network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: manga-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:4000/graphql
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - manga-network
    command: npm start

volumes:
  postgres_data:
  redis_data:

networks:
  manga-network:
    driver: bridge
